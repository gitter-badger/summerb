<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:ignoreResourceNotFound="true" p:ignoreUnresolvablePlaceholders="true">
		<property name="locations">
			<list>
				<!-- Default configuration values -->
				<value>classpath:test-dbconnection.properties</value>
				<!-- Deployment-specific configuration values that override defaults -->
				<value>file:test-user-service.properties</value>
			</list>
		</property>
	</bean>

	<!-- <bean id="aspectLogging" class="test.ru.skarpushin.utils.LoggerAspect" 
		/> <aop:config proxy-target-class="true"> <aop:pointcut id="pointcutLog" 
		expression="within(ru.skarpushin..*)" /> <aop:aspect id="aopAspect" ref="aspectLogging"> 
		<aop:before pointcut-ref="pointcutLog" method="logEntry" /> <aop:after-returning 
		pointcut-ref="pointcutLog" returning="ret" method="logExitAfterReturn" /> 
		<aop:after-throwing pointcut-ref="pointcutLog" throwing="t" method="logAfterThrowsAdvice" 
		/> </aop:aspect> </aop:config> -->

	<context:annotation-config />
	
	<bean id="entityChangesEventBus" class="com.google.common.eventbus.EventBus" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<import resource="test-datasource.xml"/>

	<bean id="userDao" class="org.summerb.microservices.users.impl.dao.impl.UserDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="userServiceNoncached" class="org.summerb.microservices.users.impl.UserServiceImpl"
		autowire-candidate="false">
		<property name="userDao" ref="userDao" />
		<property name="eventBus" ref="entityChangesEventBus" />
	</bean>

	<bean id="userService" class="org.summerb.microservices.users.impl.UserServiceCachedImpl">
		<property name="userService" ref="userServiceNoncached" />
		<property name="eventBus" ref="entityChangesEventBus" />
	</bean>

	<bean id="passwordDao"
		class="org.summerb.microservices.users.impl.dao.impl.PasswordDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="test" />
	</bean>

	<bean id="passwordService" class="org.summerb.microservices.users.impl.PasswordServiceImpl">
		<property name="passwordDao" ref="passwordDao" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="authTokenDao"
		class="org.summerb.microservices.users.impl.dao.impl.AuthTokenDaoInMemoryImpl" p:pathNameToPersistedTokens="persisted-tokens.csv">
	</bean>

	<bean id="authTokenService" class="org.summerb.microservices.users.impl.AuthTokenServiceImpl">
		<property name="authTokenDao" ref="authTokenDao" />
		<property name="userService" ref="userService" />
		<property name="passwordService" ref="passwordService" />
		<property name="authTokenTimeToLiveSeconds" value="1" />
	</bean>

	<bean id="permissionDao"
		class="org.summerb.microservices.users.impl.dao.impl.PermissionDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="permissionService" class="org.summerb.microservices.users.impl.PermissionServiceImpl">
		<property name="permissionDao" ref="permissionDao" />
	</bean>
</beans>


